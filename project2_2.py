# -*- coding: utf-8 -*-
"""project_2-2

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1C6LMy-YZaddcnRO8gxLSrSQM5zWq-4BO
"""

import pandas as pd
from sklearn.model_selection import train_test_split
from sklearn.preprocessing import StandardScaler
from sklearn.tree import DecisionTreeRegressor
from sklearn.ensemble import RandomForestRegressor
from sklearn.svm import SVR
from sklearn.metrics import mean_squared_error

def sort_dataset(dataset_df):
    sorted_df = dataset_df.sort_values(by='year', ascending=True)
    return sorted_df

def split_dataset(dataset_df):
    X = dataset_df.drop(columns=['salary'])
    Y = dataset_df['salary'] * 0.001  # Rescale label values
    X_train = X.iloc[:1718]  # Split train dataset
    X_test = X.iloc[1718:]  # Split test dataset
    Y_train = Y.iloc[:1718]
    Y_test = Y.iloc[1718:]
    return X_train, X_test, Y_train, Y_test

def extract_numerical_cols(dataset_df):
    numerical_cols = ['age', 'G', 'PA', 'AB', 'R', 'H', '2B', '3B', 'HR', 'RBI', 'SB', 'CS', 'BB', 'HBP', 'SO', 'GDP', 'fly', 'war']
    numerical_df = dataset_df[numerical_cols]
    return numerical_df

def train_predict_decision_tree(X_train, Y_train, X_test):
    dt_model = DecisionTreeRegressor()
    dt_model.fit(X_train, Y_train)
    dt_predictions = dt_model.predict(X_test)
    return dt_predictions

def train_predict_random_forest(X_train, Y_train, X_test):
    rf_model = RandomForestRegressor()
    rf_model.fit(X_train, Y_train)
    rf_predictions = rf_model.predict(X_test)
    return rf_predictions

def train_predict_svm(X_train, Y_train, X_test):
    scaler = StandardScaler()
    X_train_scaled = scaler.fit_transform(X_train)
    X_test_scaled = scaler.transform(X_test)
    svm_model = SVR()
    svm_model.fit(X_train_scaled, Y_train)
    svm_predictions = svm_model.predict(X_test_scaled)
    return svm_predictions

def calculate_RMSE(labels, predictions):
    rmse = mean_squared_error(labels, predictions, squared=False)
    return rmse

if __name__ == '__main__':
 	#DO NOT MODIFY THIS FUNCTION UNLESS PATH TO THE CSV MUST BE CHANGED.
	data_df = pd.read_csv('2019_kbo_for_kaggle_v2.csv')

	sorted_df = sort_dataset(data_df)
	X_train, X_test, Y_train, Y_test = split_dataset(sorted_df)

	X_train = extract_numerical_cols(X_train)
	X_test = extract_numerical_cols(X_test)

	dt_predictions = train_predict_decision_tree(X_train, Y_train, X_test)
	rf_predictions = train_predict_random_forest(X_train, Y_train, X_test)
	svm_predictions = train_predict_svm(X_train, Y_train, X_test)

	print ("Decision Tree Test RMSE: ", calculate_RMSE(Y_test, dt_predictions))
	print ("Random Forest Test RMSE: ", calculate_RMSE(Y_test, rf_predictions))
	print ("SVM Test RMSE: ", calculate_RMSE(Y_test, svm_predictions))